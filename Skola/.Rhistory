library(readr)
heroku_0n98456g_Estudiantes <- read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g.Estudiantes.csv")
View(heroku_0n98456g_Estudiantes)
estudiantes <- read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g.Estudiantes.csv")
head(estudiantes)
colnames(estudiantes)
usuarios <- read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g.Usuarios.csv")
usuarios <- read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g._User.csv")
head(usuarios)
View
View(usuarios)
unique(usuarios$parentesco)
acceso<-read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g.Acceso.csv")
colnames(usuario)
colnames(usuarios)
usuarios$`_id`
colnames(estudiantes)
merge(estudiantes,usuarios,by.x="MATRICULA", by.y = "matricula")
prueba<-merge(estudiantes,usuarios,by.x="MATRICULA", by.y = "matricula")
dim(prueba)
dim(usuarios)
dim(estudiantes)
unique(usuarios$_id)
usuarios$`_id`
count_fields(unique(usuarios$`_id`))
dim(unique(usuarios$`_id`))
lenght(unique(usuarios$`_id`))
length(unique(usuarios$`_id`))
colnames(acceso)
head(acceso$`_p_student`)
dim(estudiantes)
length(unique(accesos$`_p_student`))
length(unique(acceso$`_p_student`))
length(unique(acceso$`_p_user`))
dim(user)
dim(usuarios)
acceso$`_p_student`[1]
strsplit(acceso$`_p_student`,"$")
strsplit(acceso$`_p_student`[1],"$")
acceso$`_p_student`[1]
strsplit(acceso$`_p_student`[1],split = "$")
=strsplit()
?strsplit
strsplit(as.character(acceso$`_p_student`[1]),split = "$")
class(acceso$`_p_student`[1])
strsplit(acceso$`_p_student`[1], "$")
strsplit(acceso$`_p_student`[1], "")
strsplit(acceso$`_p_student`[1], "$")
length(acceso$`_p_student`[1])
charlength(acceso$`_p_student`[1])
substr(acceso$`_p_student`[1],11,nchar(acceso$`_p_student`[1]))
substr(acceso$`_p_student`[1],13,nchar(acceso$`_p_student`[1]))
substr(acceso$`_p_student`,13,nchar(acceso$`_p_student`[1]))
colnames(acceso)
acceso$id_estudiante<-substr(acceso$`_p_student`,13,nchar(acceso$`_p_student`))
acceso$id_usuario<-substr(acceso$`_p_user`,13,nchar(acceso$`_p_user`))
head(acceso$id_estudiante)
head(acceso$id_usuario)
acceso$`_p_user`
acceso$id_usuario<-substr(acceso$`_p_user`,,nchar(acceso$`_p_user`))
acceso$id_usuario<-substr(acceso$`_p_user`,5,nchar(acceso$`_p_user`))
acceso$id_usuario
acceso$id_usuario<-substr(acceso$`_p_user`,7,nchar(acceso$`_p_user`))
colnames(acceso)
View(acceso)
class(acceso$escaneoOcurrido)
oacces$dia <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 1)
acceso$hora <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 2)
acceso$dia <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 1)
acceso$hora <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 2)
POSIXct(acceso$escaneoOcurrido,"America/Los_Angeles")
as.POSIXct(acceso$escaneoOcurrido,"America/Los_Angeles")
as.POSIXct(acceso$escaneoOcurrido,"America/Mexico")
head(as.POSIXct(acceso$escaneoOcurrido,"America/Mexico"))
class(acceso$hora)
acceso$hora<-as.POSIXct(acceso$hora)
Sys.timezone()
head(as.POSIXct(acceso$escaneoOcurrido,"America/Mexico_City"))
head(as.POSIXct(acceso$hora,"America/Mexico_City"))
format(data$dateTime,tz="America/Mexico_City")
format(acceso$escaneoOcurrido,tz="America/Mexico_City")
head(format(acceso$escaneoOcurrido,tz="America/Mexico_City"))
usuarios <- read_csv("~/Documents/NIEU/Skola_CDA_MongoExport_16Oct17/heroku_0n98456g._User.csv")
acceso$id_estudiante<-substr(acceso$`_p_student`,13,nchar(acceso$`_p_student`))
acceso$id_usuario<-substr(acceso$`_p_user`,7,nchar(acceso$`_p_user`))
acceso$escaneoOcurrido<-format(acceso$escaneoOcurrido,tz="America/Mexico_City")
acceso$dia <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 1)
acceso$hora <- sapply(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 2)
summary(acceso$hora)
acceso$dia <- sapply(as.POSIXct(strsplit(as.character(acceso$escaneoOcurrido), " "), "[", 1))
library(chron)
head(chron(acceso$dia))
head(chron(acceso$hora))
head(chron(times=acceso$hora))
acceso$dia<-as.Date(acceso$dia)
acceso$hora<-chron(times=acceso$hora)
class(acceso$hora)
library(readr)
library(tidyr)
library(dplyr)
acceso %>% filter(hora>10)
acceso %>% filter(hora>"10:00:00")
i<-1
i<-1
for (i in length(acceso$hora)){
if (acceso$hora[i]<"12:00:00"){
acceso$operacion[i]<-"entrada"
i<-i+1
} else {
acceso$operacion[i]<-"salida"
i<-i+1
}
}
acceso$operacion<-"1"
i<-1
for (i in length(acceso$hora)){
if (acceso$hora[i]<"12:00:00"){
acceso$operacion[i]<-"entrada"
i<-i+1
} else {
acceso$operacion[i]<-"salida"
i<-i+1
}
}
i
i<-1
acceso$hora[i]
acceso$hora[i]<"12:00:00"
acceso$operacion[i]<-"entrada"
i<-i+1
i
acceso$operacion<-"1"
i<-1
for (i in length(acceso$hora)){
if (acceso$hora[i]<"12:00:00"){
acceso$operacion[i]<-"entrada"
i<-i+1
} else {
acceso$operacion[i]<-"salida"
i<-i+1
}
}
for (i in 1:length(acceso$hora)){
if (acceso$hora[i]<"12:00:00"){
acceso$operacion[i]<-"entrada"
i<-i+1
} else {
acceso$operacion[i]<-"salida"
i<-i+1
}
}
i
library(readr)
Catalogo_NATS <- read_csv("/Volumes/USB Mike/Catalogo_NATS.csv")
View(Catalogo_NATS)
acceso$operacion<-"1"
i<-1
for (i in 1:length(acceso$hora)){
if (is.na(acceso$hora[i])){
acceso$hora[i]<-NA
} else {
if (acceso$hora[i]<"12:00:00"){
acceso$operacion[i]<-"entrada"
i<-i+1
} else {
acceso$operacion[i]<-"salida"
i<-i+1
}
}
}
i
library(ggplot2)
table(acceso$operacion)
colnames(acceso)
aggregate(x = acceso[c("operacion")],
FUN = count,
by = list(Group.date = acceso$dia))
aggregate(x = acceso[c("operacion")],
FUN = count,
by = list(acceso$dia)
aggregate(x = acceso[c("operacion")],
FUN = count,
by = list(acceso$dia))
ggplot(acceso, aes(dia)) + geom_histogram()
ggplot(acceso, aes(dia)) + geom_histogram(bindwidth=10)
aggregate(x = acceso[c("operacion")],
FUN = count,
by = list(acceso$dia))
head(acceso)
summary(acceso)
head(acceso$operacion)
entradas<-acceso %>% filter(operacion=="entrada")
head(entrada)
head(entradas)
table(entrada$dia)
table(entradas$dia)
st_entrada<-data.frame(table(entradas$dia))
View(st_entrada)
colnames(st_entrada)<-c("Fecha", "Entradas")
salidas<-acceso %>% filter(operacion=="salida")
st_salida<-data.frame(table(salida$dia))
colnames(st_salida)<-c("Fecha", "Salidas")
st_salida<-data.frame(table(salidas$dia))
colnames(st_salida)<-c("Fecha", "Salidas")
head(st_salida)
ggplot(st_entrada, aes(Fecha, Entradas)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("")
library(ggplot2)
ggplot(st_entrada, aes(Fecha, Entradas)) + geom_line()
ggplot(st_entrada, aes(Fecha, Entradas)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("")
ggplot(st_entrada, aes(Fecha, Entradas)) + geom_line() +
scale_x_date(format = "%m-%Y") + xlab("")
ggplot(st_entrada, aes(Entradas)) + geom_bar()
ggplot(st_entrada, aes(Fecha,Entradas)) + geom_bar()
ggplot(st_entrada, aes(Fecha, Entradas, group=1)) + geom_line() +
scale_x_date(format = "%m-%Y") + xlab("")
ggplot(st_entrada, aes(Fecha, Entradas, group=1)) + geom_line() +
scale_x_date(format = "%b-%Y") + xlab("")
ggplot(st_entrada, aes(Fecha, Entradas, group=1)) + geom_line()
summary(st_entrada)
unique(acceso$puntualidad)
table(acceso$puntualidad)
class(acceso$puntualidad)
validando<-acceso %>% filter(puntualidad==9)
head(validando)
View(validando)
unique(validando$operacion)
View(estudiantes)
View(usuarios)
unique(acceso$puntualidad)
acceso$puntualidad[1]
i<-1
for (i in 1:nrow(acceso)){
if (is.na(acceso$puntualidad[i])){
acceso$puntualidad[i]<-NA
i<-i+1
} else {
if (acceso$puntualidad[i]==0){
acceso$puntualidad[i]<-"Ok"
i<-i+1
} else {
if (acceso$puntualidad[i]==1) {
acceso$puntualidad[i]<-"Tolerancia"
i<-i+1
} else{
if (acceso$puntualidad[i]==2){
acceso$puntualidad[i]<-"Tarde"
i<-i+1
} else {
if (acceso$puntualidad[i]==9)){
acceso$puntualidad[i]<-"Nose"
i<-i+1
} else {
acceso$puntualidad[i]<-"Temprano"
i<-i+1
}
}
}
}
}
}
for (i in 1:nrow(acceso)){
if (is.na(acceso$puntualidad[i])){
acceso$puntualidad[i]<-NA
i<-i+1
} else {
if (acceso$puntualidad[i]==0){
acceso$puntualidad[i]<-"Ok"
i<-i+1
} else {
if (acceso$puntualidad[i]==1) {
acceso$puntualidad[i]<-"Tolerancia"
i<-i+1
} else{
if (acceso$puntualidad[i]==2){
acceso$puntualidad[i]<-"Tarde"
i<-i+1
} else {
if (acceso$puntualidad[i]==9)){
acceso$puntualidad[i]<-"Nose"
i<-i+1
} else {
acceso$puntualidad[i]<-"Temprano"
i<-i+1
}
}
}
}
}
}
i<-1
for (i in 1:nrow(acceso)){
if (is.na(acceso$puntualidad[i])){
acceso$puntualidad[i]<-NA
i<-i+1
} else {
if (acceso$puntualidad[i]==0){
acceso$puntualidad[i]<-"Ok"
i<-i+1
} else {
if (acceso$puntualidad[i]==1) {
acceso$puntualidad[i]<-"Tolerancia"
i<-i+1
} else{
if (acceso$puntualidad[i]==2){
acceso$puntualidad[i]<-"Tarde"
i<-i+1
} else {
if (acceso$puntualidad[i]==9){
acceso$puntualidad[i]<-"Nose"
i<-i+1
} else {
acceso$puntualidad[i]<-"Temprano"
i<-i+1
}
}
}
}
}
}
table(acceso$puntualidad)
library(lubridate)
weekdays(acceso$dia[1])
acceso$dia_semana<-weekdays(acceso$dia)
unique(acceso$dia_semana)
acceso %>% filter(dia_semana=="Sunday")
View(estudiantes)
subset(estudiantes, estudiantes$`_id`=="yafCVkHvzm")
View(acceso %>% filter(dia_semana=="Sunday"))
subset(estudiantes, estudiantes$`_id`=="OVDOh0C8A1")
subset(estudiantes, estudiantes$`_id`=="qXkss2ROnv")
subset(usuarios, usuarios$`_id`=="rJ0wZ9nYI0")
domingos<-acceso %>% filter(dia_semana=="Sunday")
unique(domingos$dia)
unique(domingo$`_p_user`)
unique(domingos$`_p_user`)
subset(usuarios, usuarios$`_id`=="PmqRIAeWMf")
subset(usuarios, usuarios$`_id`=="nVtHgmPYQh")
View(subset(usuarios, usuarios$`_id`=="nVtHgmPYQh"))
unique(usuarios$username)
grep("Prueba",usuarios$username)
grep("prueba",usuarios$username)
View(acceso)
